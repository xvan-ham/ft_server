# Run process as unprivileged user (read only) to limit attacks in case of breach
user  nginx;

worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

#http block: define mime types, logging format, access log config.
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

      server {
        listen 80;
         
		# Health probe for orchestrators like Kubernetes and Docker swarm (helps with their scheduling decisions based on Nginx server health)
         location = /status {
             access_log off;
             default_type text/plain;
             add_header Content-Type text/plain;
             return 200 "alive";
        }
        
		# Redirect incomming traffic to index page
         location / {
            gzip off;
            root /usr/share/nginx/html/;	# Dockerfile copies files into this dir
            index  index.html;				# Index page
        }
        
		# Specify serve requests for static resources such as JavaScript, Style sheets and images.
        location ~* \.(js|jpg|png|css)$ {
            root /usr/share/nginx/html/;
        }
    } 
}